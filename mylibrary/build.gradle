plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    dependencies {
        testImplementation "org.powermock:powermock-module-junit4:2.0.9"
        testImplementation "org.powermock:powermock-module-junit4-rule:2.0.9"
        testImplementation "org.powermock:powermock-api-mockito2:2.0.9"
    }
}

gradle.taskGraph.whenReady { graph ->
    tasks.withType(Test) {
        println "Replace classes with instrumented classes 2"
        systemProperty 'jacoco-agent.destfile', buildDir.path + '/jacoco/tests.exec'
        classpath = files(outputDir) + classpath + configurations.jacocoRuntime
    }
}

task renameEC(type: Copy) {
    outputs.upToDateWhen { false } //to pevent gradle from not executing this task
    from("${project.buildDir}/outputs/code_coverage/debugAndroidTest/connected/")
    into("${project.buildDir}/jacoco/")
    rename('(.*).ec', 'coverage.ec')
}